name: deploy-branch

on:
  workflow_dispatch:

jobs:

  deploy_branch_to_heroku:
    runs-on: ubuntu-latest
    timeout-minutes: 24

    steps:
      - name: checkout code
        uses: actions/checkout@v2

      - name: checkout branch to gh-artifacts
        uses: actions/checkout@v2
        with:
          ref: "gh-artifacts"
          path: ./gh-artifacts

      - name: copy cache for build book
        run: |
          cp -r ./gh-artifacts/_build/ ./qmlcourseRU/ || exit 0

      - name: set up Python 3.8
        uses: actions/setup-python@v2.2.2
        with:
          python-version: 3.8

      - name: set up conda
        uses: s-weigand/setup-conda@v1
        with:
          update-conda: true
          python-version: 3.8
          conda-channels: anaconda, conda-forge, psi4
          activate-conda: true

      - name: set up poetry
        uses: snok/install-poetry@v1.1.6
        with:
          virtualenvs-create: false
          virtualenvs-in-project: true

      - name: install the main dependencies
        run: |
          conda create python=3.8 -p .venv -y
          conda install psi4 -c psi4 -p .venv -y

          poetry install

      # todo: replace with a more sane solution
      - name: install tensorflow_quantum
        run: |
          poetry run pip install --upgrade pip
          poetry run pip install -U tensorflow==2.5.1
          poetry run pip install -U tensorflow_quantum
          poetry run pip install -U tfq-nightly

      - name: build the book
        run: |
          export DWAVE_TOKEN="${{ secrets.DWAVE_TOKEN }}"
          poetry run jupyter-book build ./qmlcourseRU

      - name: add `composer.json`
        run: |
          echo "{}" > ./qmlcourseRU/_build/html/composer.json

      - name: update publish dir
        uses: peaceiris/actions-gh-pages@v3.8.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./qmlcourseRU/_build/html/
          publish_branch: heroku-deploy-branch
