name: test-psi4-setup

# Only run this when the master branch changes
on:
  workflow_dispatch:

jobs:

  deploy-book:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]

    steps:
      - name: Checkout branch for build
        uses: actions/checkout@v2

#       - name: Checkout branch to gh-artifacts
#         uses: actions/checkout@v2
#         with:
#           ref: "gh-artifacts"
#           path: ./gh-artifacts

      - name: Copy cache for build book
        run: |
          cp -r ./gh-artifacts/_build/ ./qmlcourse/ || exit 0

      # Install dependencies
      - name: Set up Python 3.8
        uses: actions/setup-python@v2.2.2
        with:
          python-version: 3.8

      - name: Set up poetry
        uses: snok/install-poetry@v1.3.3
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      # Test setup conda
      - name: Setup conda
        uses: s-weigand/setup-conda@v1
        with:
          update-conda: true
          python-version: 3.8
          conda-channels: anaconda, conda-forge

      # Use cache
      - name: Copy cache dir for dependecies
        uses: actions/cache@v3.0.11
        env:
          cache-name: cache-poetry-modules
        with:
          path: .venv
          key: venv2-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        run: |
          poetry install
          conda install psi4=1.4rc3 python=3.8 -c psi4/label/dev -y

      - name: poetry run psi4 --test
        run: |
          poetry run psi4 --test

      - name: export some tokens
        env:
          DWAVE_TOKEN: ${{ secrets.DWAVE_TOKEN }}
        run: |
          export DWAVE_TOKEN="$DWAVE_TOKEN"

      - name: Build the book
        run: |
          poetry run jupyter-book build ./qmlcourse
