#+TITLE: Вариационные квантовые схемы
#+AUTHOR: Семен Синченко
#+LANGUAGE: ru
#+LATEX_HEADER: \usepackage{polyglossia}
#+LATEX_HEADER: \setmainlanguage[babelshorthands = true]{russian}
#+LATEX_HEADER: \setotherlanguage{english}
#+LATEX_HEADER: \setmainfont{Times New Roman}
#+LATEX_HEADER: \newfontfamily{\cyrillicfont}[Ligatures = TeX, Script=Cyrillic]{Times New Roman}
#+LATEX_HEADER: \newfontfamily{\cyrillicfontsf}[Ligatures = TeX, Script=Cyrillic]{Times New Roman}
#+LATEX_HEADER: \newfontfamily{\cyrillicfonttt}[Ligatures = TeX, Script=Cyrillic]{Times New Roman}
#+LATEX_HEADER: \usepackage{amsmath}
#+LATEX_HEADER: \usepackage{physics}
#+LATEX_HEADER: \usepackage{graphicx}
#+LATEX_HEADER: \usepackage{hyperref}
#+LATEX_HEADER: \usepackage{tikz}
#+HTML_HEAD_EXTRA: <link rel="stylesheet" type="text/css" href="https://tikzjax.com/v1/fonts.css">
#+HTML_HEAD_EXTRA: <script src="https://tikzjax.com/v1/tikzjax.js"></script>

* Описание лекции
На этой лекции мы впервые познакомимся с непосредственно квантовым машинным обучением. Теперь, вместо =NumPy= мы будем использовать =PennyLane=. Лекция включает следующие темы:
- В чем идея квантово-классического обучения?
- Что такое вариационное машинное обучение?
- Как устроена вариационная квановая схема?
- Как можно закодировать данные в вариационную схему?

* Введение
Далее, в течении всего курса, мы будем больше всего говорить о квантово-классическом машинном обучении, которое построено на базе вариационных квантовых схем. Именно этот тип комбинированного, квантово-классического машинного обучения является наиболее перспективным в NISQ-эру. Прежде, чем мы начнем, давайте заглянем немного вперед и посмотрим, как выглядит типичный цикл такого обучения.

#+begin_export html
<div align="center">
<script type="text/tikz">
\begin{tikzpicture}[node distance = 3.5cm]
    \node[align=center] (data) [rectangle, minimum width=2.5cm, minimum height=1cm, draw=black, fill=green!30] {$\mathbf{X}$};
    \node[align=center] (fencoding) [rectangle, rounded corners, minimum width=2.5cm, minimum height=1cm, draw=black, fill=red!30, below of=data] {$\hat{U(X)}$};
    \node[align=center] (params) [rectangle, rounded corners, minimum width=2.5cm, minimum height=1cm, draw=black, fill=red!30, below of=fencoding] {$\hat{U(\theta)}$};
    \node[align=center] (measure) [rectangle, rounded corners, minimum width=2.5cm, minimum height=1cm, draw=black, fill=red!30, below of=params] {$\hat{M}$};
    \node[align=center] (output) [rectangle, rounded corners, minimum width=2.5cm, minimum height=1cm, draw=black, fill=green!30, below of=measure] {$\hat{y}$};
    \node[align=center] (loss) [rectangle, rounded corners, minimum width=2.5cm, minimum height=1cm, draw=black, fill=green!30, right of=output] {$L$ $(y, \hat{y})$};
    \node[align=center] (grad) [rectangle, rounded corners, minimum width=2.5cm, minimum height=1cm, draw=black, fill=green!30, above of=loss] {$dL$ / $d\theta$};
    \node[align=center] (pupd) [rectangle, rounded corners, minimum width=3.5cm, minimum height=1cm, draw=black, fill=green!30, above of=grad] {$\theta$ = $\theta$ - $\gamma G$};
    \draw [thick,->,>=stealth] (data) -- (fencoding);
    \draw [thick,->,>=stealth] (fencoding) -- (params);
    \draw [thick,->,>=stealth] (params) -- (measure);
    \draw [thick,->,>=stealth] (measure) -- (output);
    \draw [thick,->,>=stealth] (output) -- (loss);
    \draw [thick,->,>=stealth] (loss) -- (grad);
    \draw [thick,->,>=stealth] (grad) -- (pupd);
    \draw [thick,->,>=stealth] (pupd) -- (params);
\end{tikzpicture}
</script>
</div>
#+end_export

#+begin_export latex
\begin{center}

\begin{tikzpicture}[node distance = 3.5cm]
    \node[align=center] (data) [rectangle, minimum width=2.5cm, minimum height=1cm, draw=black, fill=green!30] {$\mathbf{X}$};
    \node[align=center] (fencoding) [rectangle, rounded corners, minimum width=2.5cm, minimum height=1cm, draw=black, fill=red!30, below of=data] {$\hat{U(X)}$};
    \node[align=center] (params) [rectangle, rounded corners, minimum width=2.5cm, minimum height=1cm, draw=black, fill=red!30, below of=fencoding] {$\hat{U(\theta)}$};
    \node[align=center] (measure) [rectangle, rounded corners, minimum width=2.5cm, minimum height=1cm, draw=black, fill=red!30, below of=params] {$\hat{M}$};
    \node[align=center] (output) [rectangle, rounded corners, minimum width=2.5cm, minimum height=1cm, draw=black, fill=green!30, below of=measure] {$\hat{y}$};
    \node[align=center] (loss) [rectangle, rounded corners, minimum width=2.5cm, minimum height=1cm, draw=black, fill=green!30, right of=output] {$L(y, \hat{y})$};
    \node[align=center] (grad) [rectangle, rounded corners, minimum width=2.5cm, minimum height=1cm, draw=black, fill=green!30, above of=loss] {$\frac{dL}{d\theta}$};
    \node[align=center] (pupd) [rectangle, rounded corners, minimum width=2.5cm, minimum height=1cm, draw=black, fill=green!30, above of=grad] {$\theta = \theta - \gamma G$};
    \draw [thick,->,>=stealth] (data) -- (fencoding);
    \draw [thick,->,>=stealth] (fencoding) -- (params);
    \draw [thick,->,>=stealth] (params) -- (measure);
    \draw [thick,->,>=stealth] (measure) -- (output);
    \draw [thick,->,>=stealth] (output) -- (loss);
    \draw [thick,->,>=stealth] (loss) -- (grad);
    \draw [thick,->,>=stealth] (grad) -- (pupd);
    \draw [thick,->,>=stealth] (pupd) -- (params);
\end{tikzpicture}

\end{center}
#+end_export

Красным цветом на этой диаграмме помечены блоки, которые выполняются на квантовом устройстве, а зеленым то, что считается на обычном копмьютере. Квантовая часть, которая включает в себя операторы $\hat{U(X)}$ и $\hat{U(\theta}$, а также измерение наблюдаемой $\hat{M}$ как раз и называется вариационной квантовой схемой и именно ей мы посвятим сегодняшнее занятие.

Но сначала нам придется сделать шаг назад и обсудить в общих чертах идеи, которые лежат в основе квантово-классического обучения.

* Квантово-классическое обучение
