Traceback (most recent call last):
  File "/home/runner/work/qmlcourse/qmlcourse/.venv/lib/python3.8/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/home/runner/work/qmlcourse/qmlcourse/.venv/lib/python3.8/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/home/runner/work/qmlcourse/qmlcourse/.venv/lib/python3.8/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/home/runner/work/qmlcourse/qmlcourse/.venv/lib/python3.8/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/opt/hostedtoolcache/Python/3.8.17/x64/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/home/runner/work/qmlcourse/qmlcourse/.venv/lib/python3.8/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/home/runner/work/qmlcourse/qmlcourse/.venv/lib/python3.8/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/runner/work/qmlcourse/qmlcourse/.venv/lib/python3.8/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import pennylane as qml

N_SPINS = 10
N_LAYERS = 2

device = qml.device("default.qubit", wires=N_SPINS)
ham = qml.SparseHamiltonian(op, wires=list(range(N_SPINS)), id="Hamiltonian")

def layer(params):
    for i in range(N_SPINS):
        qml.RY(params[i][0], wires=i)
        qml.RZ(params[i][1], wires=i)

    for i in range(N_SPINS - 1):
        qml.CZ(wires=[i, i + 1])

@qml.qnode(device, diff_method="parameter-shift")
def feed_forward(params):
    for k in range(N_LAYERS):
        layer(params[k])

    for i in range(N_SPINS):
        qml.RY(params[-1][i][0], wires=i)
        qml.RZ(params[-1][i][1], wires=i)

    return qml.expval(ham)

params = tuple(
    tuple(
        (
            np.random.rand() * 2 * np.pi,
            np.random.rand() * 2 * np.pi,
        )
        for _ in range(N_SPINS)
    )
    for _ in range(N_LAYERS)
)

print(f"Result for random weights: {feed_forward(params):.4f}")
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mTypeError[0m                                 Traceback (most recent call last)
Cell [0;32mIn[3], line 7[0m
[1;32m      4[0m N_LAYERS [38;5;241m=[39m [38;5;241m2[39m
[1;32m      6[0m device [38;5;241m=[39m qml[38;5;241m.[39mdevice([38;5;124m"[39m[38;5;124mdefault.qubit[39m[38;5;124m"[39m, wires[38;5;241m=[39mN_SPINS)
[0;32m----> 7[0m ham [38;5;241m=[39m [43mqml[49m[38;5;241;43m.[39;49m[43mSparseHamiltonian[49m[43m([49m[43mop[49m[43m,[49m[43m [49m[43mwires[49m[38;5;241;43m=[39;49m[38;5;28;43mlist[39;49m[43m([49m[38;5;28;43mrange[39;49m[43m([49m[43mN_SPINS[49m[43m)[49m[43m)[49m[43m,[49m[43m [49m[38;5;28;43mid[39;49m[38;5;241;43m=[39;49m[38;5;124;43m"[39;49m[38;5;124;43mHamiltonian[39;49m[38;5;124;43m"[39;49m[43m)[49m
[1;32m      9[0m [38;5;28;01mdef[39;00m [38;5;21mlayer[39m(params):
[1;32m     10[0m     [38;5;28;01mfor[39;00m i [38;5;129;01min[39;00m [38;5;28mrange[39m(N_SPINS):

File [0;32m~/work/qmlcourse/qmlcourse/.venv/lib/python3.8/site-packages/pennylane/ops/qubit/observables.py:253[0m, in [0;36mSparseHamiltonian.__init__[0;34m(self, H, wires, do_queue, id)[0m
[1;32m    251[0m [38;5;28;01mdef[39;00m [38;5;21m__init__[39m([38;5;28mself[39m, H, wires[38;5;241m=[39m[38;5;28;01mNone[39;00m, do_queue[38;5;241m=[39m[38;5;28;01mNone[39;00m, [38;5;28mid[39m[38;5;241m=[39m[38;5;28;01mNone[39;00m):
[1;32m    252[0m     [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m [38;5;28misinstance[39m(H, csr_matrix):
[0;32m--> 253[0m         [38;5;28;01mraise[39;00m [38;5;167;01mTypeError[39;00m([38;5;124m"[39m[38;5;124mObservable must be a scipy sparse csr_matrix.[39m[38;5;124m"[39m)
[1;32m    254[0m     [38;5;28msuper[39m()[38;5;241m.[39m[38;5;21m__init__[39m(H, wires[38;5;241m=[39mwires, do_queue[38;5;241m=[39mdo_queue, [38;5;28mid[39m[38;5;241m=[39m[38;5;28mid[39m)
[1;32m    255[0m     mat_len [38;5;241m=[39m [38;5;241m2[39m [38;5;241m*[39m[38;5;241m*[39m [38;5;28mlen[39m([38;5;28mself[39m[38;5;241m.[39mwires)

[0;31mTypeError[0m: Observable must be a scipy sparse csr_matrix.
TypeError: Observable must be a scipy sparse csr_matrix.

